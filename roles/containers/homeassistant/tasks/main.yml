---
- name: "Create homeassistant directories"
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ docker_recipes }}/homeassistant"
    - "{{ docker_data }}/homeassistant"
    - "{{ docker_data }}/homeassistant/config"
    - "{{ docker_data }}/homeassistant/supervisor"
    - "{{ docker_data }}/homeassistant/deconz"
    - "{{ docker_data }}/homeassistant/zigbee"
    - "{{ docker_data }}/homeassistant/mqtt"
    - "{{ docker_data }}/homeassistant/mqtt/data"
    - "{{ docker_data }}/homeassistant/mqtt/log"
    - "{{ docker_data }}/homeassistant/node-red"

# - name: "Find ZigBee devices"
#   find:
#     paths:
#       - "/dev"
#     patterns:
#       - "ttyACM*"
#     file_type:
#       any
#   register: zigbee_dev

# - name: "Show possible ZigBee devices"
#   debug:
#     var: item.path
#   with_items: "{{ zigbee_dev.files }}"

- name: "Get {{ conbee_dev }} stat"
  stat:
    path: "{{ conbee_dev }}"
  register: conbee_dev_info

- name: "Generate homeassistant docker-compose file"
  template:
    src: docker-compose.yml.j2
    dest: "{{ docker_recipes }}/homeassistant/docker-compose.yml"

- name: "Generate mosquitto config"
  template:
    src: "{{ item }}"
    dest: "{{ docker_data }}/homeassistant/mqtt/{{ item | basename | regex_replace('\\.j2$', '') }}"
    force: off
  with_fileglob:
    - "{{ role_path }}/templates/mqtt/*.j2"

- name: "Generate zigbee2mqtt config"
  template:
    src: "{{ item }}"
    dest: "{{ docker_data }}/homeassistant/zigbee/{{ item | basename | regex_replace('\\.j2$', '') }}"
    force: off
  with_fileglob:
    - "{{ role_path }}/templates/zigbee/*.j2"

- name: "Generate homeassistant config"
  template:
    src: "{{ item }}"
    dest: "{{ docker_data }}/homeassistant/config/{{ item | basename | regex_replace('\\.j2$', '') }}"
    force: off
  with_fileglob:
    - "{{ role_path }}/templates/homeassistant/*.j2"

- name: "Deploy homeassistant"
  docker_compose:
    project_src: '{{ docker_recipes }}/homeassistant'
    files:
    - docker-compose.yml
    remove_orphans: true
