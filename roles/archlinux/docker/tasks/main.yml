---
- block:
  # root

  - name: 'Install Docker'
    package:
      name:
        - docker
        - docker-compose
        - python
        - python-pip
        - python-docker
        - python-yaml
      state: latest

  - name: 'Install Docker Python Packet for root'
    pip:
      name: "{{ item }}"
    with_items:
      - "docker-compose"

  - name: 'Add users to docker group'
    user:
      name: '{{ username }}'
      groups: 'docker'
      append: 'yes'

  - name: 'Enable docker systemd service'
    ansible.builtin.systemd:
      name: 'docker'
      state: 'started'
      enabled: 'yes'

  - name: "Check if {{ docker_data }} already exists"
    stat:
      path: "{{ docker_data }}"
    register: docker_data_before

  - name: "Check if {{ docker_backup }} exists"
    stat:
      path: "{{ docker_backup }}"
    register: docker_backup_dir

  - name: 'Create docker home directory'
    file:
      dest: "{{ item }}"
      state: directory
      owner: "{{ username }}"
      group: "docker"
      recurse: no
    with_items:
       -  "{{ docker_home }}"

  # We use this network as default network bridge since the default bridge created by docker has limitations!
  - name: 'Create default docker-bridge network'
    docker_network:
      name: docker-bridge

  - name: 'Create default isolated network'
    docker_network:
      name: isolated
      internal: yes

  - name: "Restore {{ docker_home }} from {{ docker_backup }}"
    synchronize:
      src: "{{ docker_backup }}/"
      dest: "{{ docker_home }}"
      delete: true
      recursive: yes
    delegate_to: "{{ inventory_hostname }}"
    when: not docker_data_before.stat.exists and not develop and docker_backup_dir.stat.exists

  - name: 'Create docker directories'
    file:
      dest: "{{ item }}"
      state: directory
      owner: "{{ username }}"
      group: "docker"
      recurse: no
    with_items:
       - "{{ docker_home }}"
       - "{{ docker_recipes }}"
       - "{{ docker_data }}"
       - "{{ docker_logs }}"
       - "{{ docker_share }}"
       - "{{ docker_temp }}"

  - name: 'Restart docker systemd service to apply changes'
    ansible.builtin.systemd:
      name: 'docker'
      state: 'restarted'
      daemon_reload: yes
      enabled: 'yes'

  become: yes


- block:
  # user

  - name: 'Install Docker Python Packet for user'
    pip:
      name: "{{ item }}"
    with_items:
      - "docker"
      - "docker-compose"
