version: '3.9'

networks:
  default:
    external: true
    name: docker-bridge

services:
  vpn_router:
    build: ./vpn-router
    container_name: vpn-router
    restart: unless-stopped
    sysctls:
      - "net.ipv6.conf.all.disable_ipv6=0"
    dns:
      - 1.1.1.1
    cap_add:
      - NET_ADMIN
    labels:
      traefik.enable: "true"
      traefik.docker.network: "docker-bridge"
      traefik.constraints: "homelab"
      traefik.http.routers.vpn.middlewares: "iframe-header@file"
      traefik.http.routers.vpn.tls: "true"
      traefik.http.routers.vpn.rule: "Host(`vpn.{{ domain }}`)"
      traefik.http.routers.vpn.service: "vpn"
      traefik.http.services.vpn.loadbalancer.server.port: "5000"
      traefik.http.routers.jdownloader.middlewares: "iframe-header@file"
      traefik.http.routers.jdownloader.tls: "true"
      traefik.http.routers.jdownloader.rule: "Host(`jdownloader.{{ domain }}`)"
      traefik.http.routers.jdownloader.service: "jdownloader"
      traefik.http.services.jdownloader.loadbalancer.server.port: "5800"
      traefik.http.routers.nzbget.middlewares: "iframe-header@file"
      traefik.http.routers.nzbget.tls: "true"
      traefik.http.routers.nzbget.rule: "Host(`nzbget.{{ domain }}`)"
      traefik.http.routers.nzbget.service: "nzbget"
      traefik.http.services.nzbget.loadbalancer.server.port: "6789"
    networks:
      - default
    volumes:
      - "{{ docker_data }}/vpn-services/vpn-router:/config"
    ports:
      - 9666:9666
    environment:
      - WEBUI_PORTS=5000/tcp,5800/tcp,6789/tcp,9666/tcp
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "curl -s 'https://airvpn.org/api/whatismyip/' | jq '.[\"airvpn\"]' | grep true"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 10s

  vpn_jdownloader:
    image: jlesage/jdownloader-2
    container_name: jdownloader
    network_mode: service:vpn_router
    restart: unless-stopped
    depends_on:
      vpn_router:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - "{{ docker_data }}/vpn-services/jdownloader:/config"
      - "{{ docker_share }}/vpn-services/jdownloader:/output"

  vpn_nzbget:
    image: ghcr.io/linuxserver/nzbget
    container_name: nzbget
    network_mode: service:vpn_router
    restart: unless-stopped
    depends_on:
      vpn_router:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - "{{ docker_data }}/vpn-services/nzbget/config:/config"
      - "{{ docker_data }}/vpn-services/nzbget/scripts:/scripts"
      - "{{ docker_share }}/vpn-services/nzbget:/downloads"
